sysout ctrl + space : 출력문 자동완성
ctrl + alt + 방향키 : 문장 복사


int point = 3000000000;
- point 메모리 공간 별도, 값의 메모리 공간 별도
- 값의 메모리 공간은 기본적으로 int 타입 (정수 타입의 경우에만, 실수는 아님)
- 300000000L (뒤에 L을 붙여주어 값의 타입을 수동으로 지정해줌)
- L을 붙이기 전과 후는 다른 오류

long money = 10000;
- 자동변환이 진행된 것.

자동 형변환
강제 형변환
문자->데이터 형변환
데이터-> 문자 형변환

long balance = 10000;
balance *= 1.05; // balance 자동 타입변환promotion (정수->실수)
// balance = balance * 1.05; 오류나는 이유는 더블 타입이 정수 타입으로 들어가야 하기에
balance = (long)(balance * 1.05);
- 복합연산자를 활용하여 불필요한 강제 캐스팅을 줄일 수 있다.

==========================================================

원격저장소 - github.com 특정 레파지토리(저장소)
 
로컬 저장소 - pc의 특정 폴더

===로컬 레파지토리===
1. 로컬 레파지토리 만들기  (git bash 실행)
 1) C:GDJ 디렉토리로 이동한다 (git bash here)
 2) git init

2. 사용자 등록하기
 1) 사용자 이름 git config user.name 'name'
 2) 사용자 이메일 git config user.email 'email'    ---> 여기까지는 처음에 한번만

3. 스태이징하기
 1) git add 파일명 - 특정 파일만 스태이징하기
 2) git add . - 모든 파일을 스태이징하기

4. 커밋하기
 1) git commit 
 2) vim 편집기가 열림
 3) a를 눌러서 추가모드로 진입
 4) 간단한 commit message 작성하고 esc 눌러서 추가모드 종료
 5) :wq 눌러서 vim 편집기에서 빠져나옴
 * 혹은 앞 단계를 모두 제외하고 
 1) git commit -m '커밋메시지(날짜 등)'

===원격 레파지토리 만들기 ===
1. 원격 레파지토리 만들기
 1) github.com 회원가입 및 로그인
 2) create repository
   (1) name, ignore 등 설정

2. 원격 레파지토리 주소 확인
 https://github.com/hyeonwu-jang/GDJ.git
=== 여기까지가 원격 레파지토리 작업 ===

=== 다시 로컬 레파지토리에서 작업 ===
1. 원격 레파지토리 등록하기
   git remote add origin '원격 레파지토리 주소'
2. 원격 레파지토리 내용을 로컬 레파지토리로 내려받기
   git pull origin main --allow-unrelated-histories
3. 업데이트 된 로컬 레파지토리 내용을 원격 레파지토리로 올리기
   git push origin main

(로컬과 원격 연결시 최초 1회는 내려받기를 이용해서 주소를 받아야함)
ctrc + c : 입력내용 취소

<깃허브 이용 순서>
원격 레파지토리 만들기 -> 로컬 레파지토리 설정 -> 사용자 등록(이름, 메일) 
-> 스태이징 -> 커밋 -> 원격 레파지토리 등록(주소) 
git add . -> git commit -m '내용' -> git remote add origin '원격 레파지토리 주소'
-> 원격 레파지토리 내려받기 / 원격 레파지토리로 올리기
  git pull origin main --allow(tap)-unrelated-histories  -> git push origin main 

* 폴더에 변화가 생기면 스태이징, 커밋을 한다.
* 애드와 커밋을 한번에 하는 방법( git commit -am '메시지')
 - 최초 한번은 애드 커밋 따로 해야함. 다음부터 활용 가능
